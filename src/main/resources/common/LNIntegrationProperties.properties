# To change this license header, choose License Headers in Project Properties.
# To change this template file, choose Tools | Templates
# and open the template in the editor.
ln.integration.release.build=7.0.1
LN.transfer.log.dir=log/LNTransfer.log
LN.transfer.log.file.size=5MB
LN.response.timeout.limit=20000000
LN.transfer.log.backup.index=5
LN.default.language.id=EN-US
#ln.item.itemGroup=ODI
ln.item.unitSet=ALL
ln.item.productType=ENV
ln.activationType.company=1001
ln.activationType.sender=Enovia
ln.data.area.item.message.id=ITEM_MASTERDATA
ln.data.area.bom.message.id=BOM_MASTERDATA
ln.data.area.project.deliverable.message.id=PROJECT_DELIVERABLE
ln.data.area.multilevelbom.message.id=BOM_MASTERDATA_RETURN
ln.data.area.disassemble.structure.message.id=DISASSEMBLY_STRUCTURE
date.format=dd-MM-yyyy HH:mm:ss
expand.level=1
 #LNIntegration Business Object Basic Property Mapping with Catia and LN Service
source.object.type=type
destination.object.type=type
source.object.name=name
source.object.ExternalID=PLMEntity.PLM_ExternalID
destination.object.name=itemId
#destination.object.name=signal
source.object.revision=revision
destination.object.revision=revision
source.object.current=current
destination.object.current=signal
destination.object.selection=selectionCode
 #LNIntegration Relationship Basic Property Mapping with Catia and LN Service
source.relationship.name=name
destination.relationship.name=component
source.relationship.revision=revision
destination.relationship.revision=componentRevision
source.object.project=project
source.object.id=id
source.object.owner=owner
destination.object.owner=technicalCoordinator
#MBOM_MBOMReference.MBOM_Item_Code
source.item.code=MBOM_MBOMPDM.MBOM_PDM_Manufacturing_Item_Code
source.rel.position=MBOM_MBOMERPInstance.MBOM_Position
#source.rel.continious.position=MBOM_MBOMContInstance.MBOM_Position
source.rel.subContractor=V_isVPLMControlled
#source.rel.quantity=MBOM_MBOMInstance.MBOM_Set_Quantity
source.rel.continious.quantity=ProcessInstanceContinuous.V_UsageContCoeff
source.rel.milestone=MBOM_MBOMReference.MBOM_Milestone
deliverable.object.type=DELI_VALDeliverable
source.att.contract.deliberable=DELI_VALDeliverable.DELI_Contract_Deliverable
source.att.deliberable.quantity=DELI_VALDeliverable.DELI_Qty
#source.rel.delivery.quantity=MBOM_MBOMERPInstance.MBOM_Deliverable_Qty
source.rel.length=MBOM_MBOMPDMContInstance.MBOM_Length
source.rel.width=MBOM_MBOMPDMContInstance.MBOM_Width
source.rel.type=type
source.att.planning.required=CreateAssembly.V_NeedDedicatedSystem
#source.att.title.bundleId=Title_BundleID
source.att.title.termId=TRS_TermID.TRS_TermID
source.att.is.last.version=PLMReference.V_isLastVersion
val.componant.type.name=VAL_VALComponent
val.componant.matarial.type.name=VAL_VALComponentMaterial
source.att.send.to.erp=MBOM_MBOMERP.MBOM_TransferredtoERP
source.att.selection.code=MBOM_MBOMERP.MBOM_BOM_Selection
source.VAL.att.inventoryUnit=MBOM_MBOMContReference.MBOM_Inventory_Unit
source.att.ReleasePurpose=MBOM_MBOMERP.MBOM_Release_Purpose
#source.CreateAssembly.att.outsourced=CreateAssembly.V_Outsourced
item.transfer.to.erp=MBOM_MBOMERPInstance.MBOM_AllowStructureTransferToERP
#continious.item.transfer.to.erp=MBOM_MBOMContInstance.MBOM_AllowStructureTransferToERP
item.att.release.purpose=MBOM_MBOMM_.MBOM_Release_Purpose
item.att.mbom.type=MBOM_MBOMReference.MBOM_Type
item.att.document.id=XP_VPMRepReference_Ext.E_XParamStr16A
item.att.change.id=Change Id
item.type.process.cnx=DELFmiProcessImplementCnx
item.type.resulting.product.process.cnx=DELFmiProcessOutputPrereqMaterializationCnx
rel.item.to.process.cnx=VPLMrel/PLMConnection/V_Owner
item.type.vpm.reference=VPMReference
item.type.drawing=Drawing
item.type.plm.doc.conn=PLMDocConnection
item.type.doc=Document
item.type.plm.dmt.doc=PLMDMTDocument
item.type.link=MfgProductionPlanning
rel.vpmreference.to.drwaing=VPMRepInstance
rel.rfn.byproduct=RFN_By_Product.RFN_By_Product
rel.types.for.length.width=ProcessInstanceContinuous,
rel.common.text=PLMInstance.V_description
rel.purchasing.text=MBOMTEXT_PurchasingText.MBOMTEXT_PurchasingText
rel.manufacturing.text=MBOMTEXT_ManufacturingText.MBOMTEXT_ManufacturingText
physical.product.att.length=ENG_ManufacturingMaterial.ENG_Length
physical.product.att.width=ENG_ManufacturingMaterial.ENG_Width
item.att.mastership=MBOM_MBOMPDM.MBOM_Mastership
item.att.PDM.rev=MBOM_MBOMPDM.MBOM_PDM_Revision
collaboration.space.global.component=GLOBAL_COMPONENTS_INTERNAL
item.attribute.DocDistributionList=DOC_DocDistributionList.DOC_DocDistributionList
LN.erp=LN1001
#pdm.ln.service.request.retry=2
pdm.ln.service.request.retry=2
pdm.ln.service.null.response.message=PDM service returned empty or null response
pdm.ln.service.item.not.found.message=PDM service returned no response for the item(s)
pdm.ln.service.unexpected.exception.response.message=Exception occurred while processing PDM item(s)
pdm.ln.service.missing.val.item.response.message=Transfer failed for pdm item(s)
ln.missing.child.item.default.message=Child item is missing in LN, BOM will not send
ln.missing.child.item.message=BOM transfer failed for missing child item(s)
disassemble.message.no.item.connected=There should be one or more connection (Deliverable object and Loading/Unloading) is needed for deliverable and disassemble sending. 
disassemble.message.top.item.connected=Top item should be connected with Deliverable object. No connection found.
disassemble.message.top.item.release.purpose=Top MBOM should be transferred to LN. {0} {1}. Transfer to ERP value is : {2}
disassemble.message.item.transfer.status=MBOM should be transferred to LN. {0} {1} Transfer to ERP value is : {2}
LN.description.length=30
LN.description.byte.length=30
LN.note.text.max.length=255
LN.longdescription.length=250
ln.transfer.error.message.sender.email = test-admin.plm@valmet.com
ln.transfer.successful.message.header = Following Items are Successfully Transferred
ln.transfer.error.message.header = Please find the list of error during Transfer
ln.transfer.unrecognized.message.header = Unrecognized Error Found
ln.transfer.successful.email.subject = ENOVIA to LN Transfer Status
gts.nightly.update.email.subject = [Enovia  to LN]  Nightly Translation update
ln.cost.calculation.message.id=ITEM_COST_CALCULATION
item.mastership.att=MBOM_MBOMPDM.MBOM_Mastership
item.type.ca=CreateAssembly
item.type.pvd=Provide
item.type.eli=ElementaryEndItem
item.type.valComponent=VAL_VALComponent
item.type.valComponentMaterial=VAL_VALComponentMaterial
LN.selection.code.stand.alone.item=ITM
LN.selection.code.BOM.missing.in.LN=EXT
LN.selection.code.BOM.transfer.successful.in.LN=BOM
LN.selection.code.BOM.transfer.error.in.LN=ERR
LN.nightly.translation.update.restricted.item.type=DELFmiProcessPrerequisitePort,VAL_VALComponent,VAL_VALComponentMaterial
LN.item.sending.fail.default.message=Error(s) occurred during ITEM transfer to ERP company
LN.bom.sending.fail.default.message=Error(s) occurred during BOM transfer to ERP company
LN.item.text.technical.designation.prefix=Technical Designation
LN.note.text.separator.newline=\n
LN.bom.text.type=BOMText
LN.bom.purchasing.text.prefix=>
LN.bom.manufacturing.text.prefix=<
validation.model.item.transfer.error.message=Model items are not eligible for transfer to LN
validation.nonvsix.item.transfer.error.message=Only Enovia items are eligible for transfer to LN
validation.unsupported.maturity.error.message=Maturity state not supported. Supported states are:
validation.unsupported.type.error.message=Item type not supported to transfer. Supported types are:
transfer.retry.count=0
